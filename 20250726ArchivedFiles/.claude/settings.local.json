{
  "permissions": {
    "allow": [
      "Bash(git checkout:*)",
      "Bash(true)",
      "Bash(ls:*)",
      "Bash(ss:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(killall:*)",
      "Bash(./web-licensed.exe)",
      "Bash(fuser:*)",
      "Bash(./web-licensed.exe:*)",
      "Bash(grep:*)",
      "Bash(go mod:*)",
      "Bash(taskkill:*)",
      "Bash(pkill:*)",
      "Bash(cmd.exe:*)",
      "Bash(cp:*)",
      "Bash(wmic process where:*)",
      "Bash(powershell:*)",
      "Bash(go build:*)",
      "Bash(timeout:*)",
      "Bash(build.bat)",
      "Bash(cmd /c:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(tasklist)",
      "Bash(kill:*)",
      "Bash(./build.bat)",
      "Bash(diff:*)",
      "Bash(cmd //c:*)",
      "Bash(start:*)",
      "mcp__playwright__browser_install",
      "Bash(go test:*)",
      "Bash(go tool cover:*)",
      "Bash(mv:*)",
      "Bash(go get:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright:*)",
      "Bash(handle release\\logs\\audit.log)",
      "Bash(Remove-Item -Path release -Recurse -Force)",
      "Bash(Remove-Item -Path \"release\\data\\downloads\\*\" -Force -ErrorAction SilentlyContinue)",
      "Bash(Remove-Item -Path \"release\\data\\reports\\*\" -Force -ErrorAction SilentlyContinue)",
      "Bash(Write-Host \"Data folders cleaned\")",
      "Bash(dir logs)",
      "Bash(cat:*)",
      "Bash(dir:*)",
      "Bash(.scraper.exe:*)",
      "Bash(export CGO_ENABLED=1)",
      "Bash(export PATH=\"$PATH:/c/mingw64/bin\")",
      "Bash(npm install:*)",
      "Bash(npm test)",
      "Bash(move install-gcc.bat archived-docsdevelopment-artifactsscripts )",
      "Bash(move install-gcc.ps1 archived-docsdevelopment-artifactsscripts )",
      "Bash(move install-mingw-direct.bat archived-docsdevelopment-artifactsscripts )",
      "Bash(move download-mingw-binaries.ps1 archived-docsdevelopment-artifactsscripts )",
      "Bash(move quick-gcc-setup.ps1 archived-docsdevelopment-artifactsscripts )",
      "Bash(move set-mingw-env.ps1 archived-docsdevelopment-artifactsscripts )",
      "Bash(move setup-go-race.ps1 archived-docsdevelopment-artifactsscripts)",
      "Bash(./scripts/sanitize-credentials.bat)"
    ],
    "deny": []
  }
}